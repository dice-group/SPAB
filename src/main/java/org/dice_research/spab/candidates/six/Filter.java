package org.dice_research.spab.candidates.six;

import java.util.LinkedList;
import java.util.List;

/**
 * Filter ::= 'FILTER' Constraint
 * 
 * Generated by {@link GraphPatternNotTriples}.
 * 
 * @see https://www.w3.org/TR/sparql11-query/#rFilter
 * 
 * @author Adrian Wilke
 */
public class Filter extends Expression {

	/**
	 * Creates filters containing various constraints.
	 */
	public static List<Expression> getInitialInstances() {
		List<Expression> instances = new LinkedList<Expression>();
		for (Expression constraint : Constraint.getInitialInstances()) {
			Filter filter = new Filter();
			filter.sequence.add(constraint);
			instances.add(filter);
		}
		return instances;
	}

	public Filter() {
		super();
	}

	public Filter(Expression origin) {
		super(origin);
	}

	@Override
	protected Expression createInstance(Expression origin) {
		return new Filter(origin);
	}

	@Override
	protected void addRegex(StringBuilder stringBuilder) {
		addWildcard(stringBuilder);
		stringBuilder.append("FILTER ");
		addSequenceToRegex(stringBuilder);
	}
}