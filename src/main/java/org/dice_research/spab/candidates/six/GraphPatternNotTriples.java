package org.dice_research.spab.candidates.six;

/**
 * GraphPatternNotTriples ::= GroupOrUnionGraphPattern | OptionalGraphPattern |
 * MinusGraphPattern | GraphGraphPattern | ServiceGraphPattern | Filter | Bind |
 * InlineData
 * 
 * Generated by {@link GroupGraphPatternSub}.
 * 
 * @see https://www.w3.org/TR/sparql11-query/#rGraphPatternNotTriples
 * 
 * @author Adrian Wilke
 */
public class GraphPatternNotTriples extends Expression {

	public GraphPatternNotTriples() {
		sequence.add(new GroupOrUnionGraphPattern());
	}

	public GraphPatternNotTriples(Expression origin) {
		super(origin);
	}

	@Override
	protected Expression createInstance(Expression origin) {
		return new GraphPatternNotTriples(origin);
	}

	@Override
	protected void addRegex(StringBuilder stringBuilder) {
		boolean empty = false;
		if (stringBuilder.length() == 0) {
			empty = true;
		}

		addSequenceToRegex(stringBuilder);

		if (empty) {
			encloseWithWildcards(stringBuilder);
		}
	}
}